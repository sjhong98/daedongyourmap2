"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/[location]/page",{

/***/ "(app-pages-browser)/./app/[location]/fetchPost.tsx":
/*!**************************************!*\
  !*** ./app/[location]/fetchPost.tsx ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchPost: function() { return /* binding */ fetchPost; }\n/* harmony export */ });\nconst fetchPost = async (location, email, lastIndex)=>{\n    let startIndex;\n    let body;\n    if (lastIndex === undefined) {\n        if (location !== \"all\" && email === \"all\") {\n            body = JSON.stringify({\n                \"structuredQuery\": {\n                    \"from\": [\n                        {\n                            \"collectionId\": \"posts\"\n                        }\n                    ],\n                    \"where\": {\n                        \"fieldFilter\": {\n                            \"field\": {\n                                \"fieldPath\": \"point\"\n                            },\n                            \"op\": \"EQUAL\",\n                            \"value\": {\n                                \"stringValue\": \"\".concat(location)\n                            }\n                        }\n                    },\n                    \"orderBy\": [\n                        {\n                            \"field\": {\n                                \"fieldPath\": \"createTime\"\n                            },\n                            \"direction\": \"DESCENDING\"\n                        }\n                    ],\n                    \"limit\": 1\n                }\n            });\n        } else if (location === \"all\" && email !== \"all\") {\n            body = JSON.stringify({\n                \"structuredQuery\": {\n                    \"from\": [\n                        {\n                            \"collectionId\": \"posts\"\n                        }\n                    ],\n                    \"where\": {\n                        \"fieldFilter\": {\n                            \"field\": {\n                                \"fieldPath\": \"user\"\n                            },\n                            \"op\": \"EQUAL\",\n                            \"value\": {\n                                \"stringValue\": \"\".concat(email)\n                            }\n                        }\n                    },\n                    \"orderBy\": [\n                        {\n                            \"field\": {\n                                \"fieldPath\": \"createTime\"\n                            },\n                            \"direction\": \"DESCENDING\"\n                        }\n                    ],\n                    \"limit\": 1\n                }\n            });\n        } else {\n            body = JSON.stringify({\n                \"structuredQuery\": {\n                    \"from\": [\n                        {\n                            \"collectionId\": \"posts\"\n                        }\n                    ],\n                    \"where\": {\n                        \"fieldFilter\": {\n                            \"field\": {\n                                \"fieldPath\": \"user\"\n                            },\n                            \"op\": \"EQUAL\",\n                            \"value\": {\n                                \"stringValue\": \"\".concat(email)\n                            }\n                        }\n                    },\n                    \"orderBy\": [\n                        {\n                            \"field\": {\n                                \"fieldPath\": \"createTime\"\n                            },\n                            \"direction\": \"DESCENDING\"\n                        }\n                    ],\n                    \"limit\": 1\n                }\n            });\n        }\n        // 첫 게시물의 createTime 기준 내림차순 게시물 받기 위해 첫 게시물 데이터 패치\n        const getFirstPost = await fetch(\"https://firestore.googleapis.com/v1/projects/daedongyourmap-ad63d/databases/(default)/documents:runQuery\", {\n            method: \"POST\",\n            cache: \"no-cache\",\n            body: body\n        });\n        const firstPost = await getFirstPost.json();\n        if (firstPost && firstPost) startIndex = firstPost[0].document.fields.createTime.doubleValue;\n        else startIndex = 0;\n    } else {\n        startIndex = lastIndex;\n    }\n    if (location !== \"all\" && email === \"all\") {\n        body = JSON.stringify({\n            \"structuredQuery\": {\n                \"from\": [\n                    {\n                        \"collectionId\": \"posts\"\n                    }\n                ],\n                \"where\": {\n                    \"fieldFilter\": {\n                        \"field\": {\n                            \"fieldPath\": \"point\"\n                        },\n                        \"op\": \"EQUAL\",\n                        \"value\": {\n                            \"stringValue\": \"\".concat(location)\n                        }\n                    }\n                },\n                \"orderBy\": [\n                    {\n                        \"field\": {\n                            \"fieldPath\": \"createTime\"\n                        },\n                        \"direction\": \"DESCENDING\"\n                    }\n                ],\n                \"startAt\": {\n                    \"values\": {\n                        \"doubleValue\": startIndex\n                    },\n                    \"before\": true\n                },\n                \"limit\": 30\n            }\n        });\n    } else if (location === \"all\" && email !== \"all\") {\n        JSON.stringify({\n            \"structuredQuery\": {\n                \"from\": [\n                    {\n                        \"collectionId\": \"posts\"\n                    }\n                ],\n                \"where\": {\n                    \"fieldFilter\": {\n                        \"field\": {\n                            \"fieldPath\": \"user\"\n                        },\n                        \"op\": \"EQUAL\",\n                        \"value\": {\n                            \"stringValue\": \"\".concat(email)\n                        }\n                    }\n                },\n                \"orderBy\": [\n                    {\n                        \"field\": {\n                            \"fieldPath\": \"createTime\"\n                        },\n                        \"direction\": \"DESCENDING\"\n                    }\n                ],\n                \"startAt\": {\n                    \"values\": {\n                        \"doubleValue\": startIndex\n                    },\n                    \"before\": true\n                },\n                \"limit\": 30\n            }\n        });\n    } else {\n        JSON.stringify({\n            \"structuredQuery\": {\n                \"from\": [\n                    {\n                        \"collectionId\": \"posts\"\n                    }\n                ],\n                \"where\": {\n                    \"fieldFilter\": {\n                        \"field\": {\n                            \"fieldPath\": \"point\"\n                        },\n                        \"op\": \"EQUAL\",\n                        \"value\": {\n                            \"stringValue\": \"\".concat(location)\n                        }\n                    }\n                },\n                \"orderBy\": [\n                    {\n                        \"field\": {\n                            \"fieldPath\": \"createTime\"\n                        },\n                        \"direction\": \"DESCENDING\"\n                    }\n                ],\n                \"startAt\": {\n                    \"values\": {\n                        \"doubleValue\": startIndex\n                    },\n                    \"before\": true\n                },\n                \"limit\": 30\n            }\n        });\n    }\n    const response = await fetch(\"https://firestore.googleapis.com/v1/projects/daedongyourmap-ad63d/databases/(default)/documents:runQuery\", {\n        method: \"POST\",\n        cache: \"no-cache\",\n        body: body\n    });\n    const data = await response.json();\n    let extract = [];\n    data.map((elem)=>{\n        let item = elem.document;\n        let curComments;\n        if (item) {\n            if (item.fields.comments.arrayValue.values === undefined) curComments = [];\n            else curComments = item.fields.comments.arrayValue.values;\n            item !== undefined && extract.push({\n                createTime: item.fields.createTime.doubleValue,\n                title: item.fields.title.stringValue,\n                content: item.fields.content.stringValue,\n                point: item.fields.point.stringValue,\n                photo: item.fields.photo.arrayValue.values,\n                user: item.fields.user.stringValue,\n                comments: curComments,\n                name: item.name,\n                likes: item.fields.likes.arrayValue.values\n            });\n        }\n    });\n    // console.log(\"rough data : \" , data);\n    return extract;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/[location]/fetchPost.tsx\n"));

/***/ })

});