"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/[location]/page",{

/***/ "(app-pages-browser)/./app/[location]/fetchPost.tsx":
/*!**************************************!*\
  !*** ./app/[location]/fetchPost.tsx ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchPost: function() { return /* binding */ fetchPost; }\n/* harmony export */ });\nconst fetchPost = async (startIndex, value, endIndex)=>{\n    const response = await fetch(\"https://firestore.googleapis.com/v1/projects/daedongyourmap-ad63d/databases/(default)/documents:runQuery\", {\n        method: \"POST\",\n        cache: \"no-cache\",\n        body: JSON.stringify({\n            \"structuredQuery\": {\n                \"from\": [\n                    {\n                        \"collectionId\": \"posts\"\n                    }\n                ],\n                \"where\": {\n                    \"fieldFilter\": {\n                        \"field\": {\n                            \"fieldPath\": \"point\"\n                        },\n                        \"op\": \"EQUAL\",\n                        \"value\": {\n                            \"stringValue\": \"\".concat(value)\n                        }\n                    }\n                },\n                \"orderBy\": [\n                    {\n                        \"field\": {\n                            \"fieldPath\": \"createTime\"\n                        },\n                        \"direction\": \"DESCENDING\"\n                    }\n                ],\n                \"limit\": 1\n            }\n        })\n    });\n    // const response = await fetch('https://firestore.googleapis.com/v1/projects/daedongyourmap-ad63d/databases/(default)/documents:runQuery', {\n    //     method: 'POST',\n    //     cache: 'no-cache',\n    //     body: JSON.stringify({\n    //         \"structuredQuery\": {\n    //             \"from\": [{\n    //                 \"collectionId\": \"posts\",\n    //             }],\n    //             \"where\": {\n    //                 \"fieldFilter\": {\n    //                     \"field\": { \"fieldPath\": \"point\" },\n    //                     \"op\": \"EQUAL\",\n    //                     \"value\": { \"stringValue\": `${value}` }\n    //                 }\n    //             },\n    //             \"orderBy\": [{\n    //                     \"field\": { \"fieldPath\": \"createTime\" },\n    //                     \"direction\": \"DESCENDING\" \n    //             }],\n    //             \"limit\": 30,\n    //         }\n    //     })\n    // });\n    const data = await response.json();\n    let extract = [];\n    data.map((elem)=>{\n        let item = elem.document;\n        let curComments;\n        if (item) {\n            if (item.fields.comments.arrayValue.values === undefined) curComments = [];\n            else curComments = item.fields.comments.arrayValue.values;\n            item !== undefined && extract.push({\n                createTime: item.createTime,\n                title: item.fields.title.stringValue,\n                content: item.fields.content.stringValue,\n                point: item.fields.point.stringValue,\n                photo: item.fields.photo.arrayValue.values,\n                user: item.fields.user.stringValue,\n                comments: curComments,\n                name: item.name,\n                likes: item.fields.likes.arrayValue.values\n            });\n        }\n    });\n    console.log(\"\\n\\n\\n\\n\\n\\nstartIndex : \", startIndex, \"\\n\\n\\n\\n\\n\\n\\n\");\n    // console.log(\"rough data : \" , data);\n    return extract;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9bbG9jYXRpb25dL2ZldGNoUG9zdC50c3giLCJtYXBwaW5ncyI6Ijs7OztBQUFPLE1BQU1BLFlBQVksT0FBT0MsWUFBcUJDLE9BQWdCQztJQUNqRSxNQUFNQyxXQUFXLE1BQU1DLE1BQU0sNEdBQTRHO1FBQ3JJQyxRQUFRO1FBQ1JDLE9BQU87UUFDUEMsTUFBTUMsS0FBS0MsU0FBUyxDQUFDO1lBQ2pCLG1CQUFtQjtnQkFDZixRQUFRO29CQUFDO3dCQUNMLGdCQUFnQjtvQkFDcEI7aUJBQUU7Z0JBQ0YsU0FBUztvQkFDTCxlQUFlO3dCQUNYLFNBQVM7NEJBQUUsYUFBYTt3QkFBUTt3QkFDaEMsTUFBTTt3QkFDTixTQUFTOzRCQUFFLGVBQWUsR0FBUyxPQUFOUjt3QkFBUTtvQkFDekM7Z0JBQ0o7Z0JBQ0EsV0FBVztvQkFBQzt3QkFDSixTQUFTOzRCQUFFLGFBQWE7d0JBQWE7d0JBQ3JDLGFBQWE7b0JBQ3JCO2lCQUFFO2dCQUNGLFNBQVM7WUFDYjtRQUNKO0lBQ0o7SUFFQSw2SUFBNkk7SUFDN0ksc0JBQXNCO0lBQ3RCLHlCQUF5QjtJQUN6Qiw2QkFBNkI7SUFDN0IsK0JBQStCO0lBQy9CLHlCQUF5QjtJQUN6QiwyQ0FBMkM7SUFDM0Msa0JBQWtCO0lBQ2xCLHlCQUF5QjtJQUN6QixtQ0FBbUM7SUFDbkMseURBQXlEO0lBQ3pELHFDQUFxQztJQUNyQyw2REFBNkQ7SUFDN0Qsb0JBQW9CO0lBQ3BCLGlCQUFpQjtJQUNqQiw0QkFBNEI7SUFDNUIsOERBQThEO0lBQzlELGlEQUFpRDtJQUNqRCxrQkFBa0I7SUFDbEIsMkJBQTJCO0lBQzNCLFlBQVk7SUFDWixTQUFTO0lBQ1QsTUFBTTtJQUVOLE1BQU1TLE9BQU8sTUFBTVAsU0FBU1EsSUFBSTtJQUVoQyxJQUFJQyxVQUFpQixFQUFFO0lBQ3ZCRixLQUFLRyxHQUFHLENBQUMsQ0FBQ0M7UUFDTixJQUFJQyxPQUFPRCxLQUFLRSxRQUFRO1FBQ3hCLElBQUlDO1FBQ0osSUFBR0YsTUFBTTtZQUNMLElBQUdBLEtBQUtHLE1BQU0sQ0FBQ0MsUUFBUSxDQUFDQyxVQUFVLENBQUNDLE1BQU0sS0FBS0MsV0FBV0wsY0FBYyxFQUFFO2lCQUNwRUEsY0FBY0YsS0FBS0csTUFBTSxDQUFDQyxRQUFRLENBQUNDLFVBQVUsQ0FBQ0MsTUFBTTtZQUN6RE4sU0FBU08sYUFBYVYsUUFBUVcsSUFBSSxDQUFDO2dCQUMvQkMsWUFBWVQsS0FBS1MsVUFBVTtnQkFDM0JDLE9BQU9WLEtBQUtHLE1BQU0sQ0FBQ08sS0FBSyxDQUFDQyxXQUFXO2dCQUNwQ0MsU0FBU1osS0FBS0csTUFBTSxDQUFDUyxPQUFPLENBQUNELFdBQVc7Z0JBQ3hDRSxPQUFPYixLQUFLRyxNQUFNLENBQUNVLEtBQUssQ0FBQ0YsV0FBVztnQkFDcENHLE9BQU9kLEtBQUtHLE1BQU0sQ0FBQ1csS0FBSyxDQUFDVCxVQUFVLENBQUNDLE1BQU07Z0JBQzFDUyxNQUFNZixLQUFLRyxNQUFNLENBQUNZLElBQUksQ0FBQ0osV0FBVztnQkFDbENQLFVBQVVGO2dCQUNWYyxNQUFNaEIsS0FBS2dCLElBQUk7Z0JBQ2ZDLE9BQU9qQixLQUFLRyxNQUFNLENBQUNjLEtBQUssQ0FBQ1osVUFBVSxDQUFDQyxNQUFNO1lBQzlDO1FBQ0o7SUFDSjtJQUNBWSxRQUFRQyxHQUFHLENBQUMsNkJBQTZCbEMsWUFBWTtJQUNyRCx1Q0FBdUM7SUFDdkMsT0FBT1k7QUFDWCxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2FwcC9bbG9jYXRpb25dL2ZldGNoUG9zdC50c3g/NTg4NSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZmV0Y2hQb3N0ID0gYXN5bmMgKHN0YXJ0SW5kZXg/OiBudW1iZXIsIHZhbHVlPzogc3RyaW5nLCBlbmRJbmRleD86bnVtYmVyICkgPT4ge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vZmlyZXN0b3JlLmdvb2dsZWFwaXMuY29tL3YxL3Byb2plY3RzL2RhZWRvbmd5b3VybWFwLWFkNjNkL2RhdGFiYXNlcy8oZGVmYXVsdCkvZG9jdW1lbnRzOnJ1blF1ZXJ5Jywge1xuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgY2FjaGU6ICduby1jYWNoZScsXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgIFwic3RydWN0dXJlZFF1ZXJ5XCI6IHtcbiAgICAgICAgICAgICAgICBcImZyb21cIjogW3tcbiAgICAgICAgICAgICAgICAgICAgXCJjb2xsZWN0aW9uSWRcIjogXCJwb3N0c1wiLFxuICAgICAgICAgICAgICAgIH1dLFxuICAgICAgICAgICAgICAgIFwid2hlcmVcIjoge1xuICAgICAgICAgICAgICAgICAgICBcImZpZWxkRmlsdGVyXCI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiZmllbGRcIjogeyBcImZpZWxkUGF0aFwiOiBcInBvaW50XCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFwib3BcIjogXCJFUVVBTFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJ2YWx1ZVwiOiB7IFwic3RyaW5nVmFsdWVcIjogYCR7dmFsdWV9YCB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIFwib3JkZXJCeVwiOiBbe1xuICAgICAgICAgICAgICAgICAgICAgICAgXCJmaWVsZFwiOiB7IFwiZmllbGRQYXRoXCI6IFwiY3JlYXRlVGltZVwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBcImRpcmVjdGlvblwiOiBcIkRFU0NFTkRJTkdcIiBcbiAgICAgICAgICAgICAgICB9XSxcbiAgICAgICAgICAgICAgICBcImxpbWl0XCI6IDEsXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfSk7XG5cbiAgICAvLyBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCdodHRwczovL2ZpcmVzdG9yZS5nb29nbGVhcGlzLmNvbS92MS9wcm9qZWN0cy9kYWVkb25neW91cm1hcC1hZDYzZC9kYXRhYmFzZXMvKGRlZmF1bHQpL2RvY3VtZW50czpydW5RdWVyeScsIHtcbiAgICAvLyAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgLy8gICAgIGNhY2hlOiAnbm8tY2FjaGUnLFxuICAgIC8vICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgLy8gICAgICAgICBcInN0cnVjdHVyZWRRdWVyeVwiOiB7XG4gICAgLy8gICAgICAgICAgICAgXCJmcm9tXCI6IFt7XG4gICAgLy8gICAgICAgICAgICAgICAgIFwiY29sbGVjdGlvbklkXCI6IFwicG9zdHNcIixcbiAgICAvLyAgICAgICAgICAgICB9XSxcbiAgICAvLyAgICAgICAgICAgICBcIndoZXJlXCI6IHtcbiAgICAvLyAgICAgICAgICAgICAgICAgXCJmaWVsZEZpbHRlclwiOiB7XG4gICAgLy8gICAgICAgICAgICAgICAgICAgICBcImZpZWxkXCI6IHsgXCJmaWVsZFBhdGhcIjogXCJwb2ludFwiIH0sXG4gICAgLy8gICAgICAgICAgICAgICAgICAgICBcIm9wXCI6IFwiRVFVQUxcIixcbiAgICAvLyAgICAgICAgICAgICAgICAgICAgIFwidmFsdWVcIjogeyBcInN0cmluZ1ZhbHVlXCI6IGAke3ZhbHVlfWAgfVxuICAgIC8vICAgICAgICAgICAgICAgICB9XG4gICAgLy8gICAgICAgICAgICAgfSxcbiAgICAvLyAgICAgICAgICAgICBcIm9yZGVyQnlcIjogW3tcbiAgICAvLyAgICAgICAgICAgICAgICAgICAgIFwiZmllbGRcIjogeyBcImZpZWxkUGF0aFwiOiBcImNyZWF0ZVRpbWVcIiB9LFxuICAgIC8vICAgICAgICAgICAgICAgICAgICAgXCJkaXJlY3Rpb25cIjogXCJERVNDRU5ESU5HXCIgXG4gICAgLy8gICAgICAgICAgICAgfV0sXG4gICAgLy8gICAgICAgICAgICAgXCJsaW1pdFwiOiAzMCxcbiAgICAvLyAgICAgICAgIH1cbiAgICAvLyAgICAgfSlcbiAgICAvLyB9KTtcblxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG5cbiAgICBsZXQgZXh0cmFjdDogYW55W10gPSBbXTtcbiAgICBkYXRhLm1hcCgoZWxlbTogYW55KSA9PiB7XG4gICAgICAgIGxldCBpdGVtID0gZWxlbS5kb2N1bWVudDtcbiAgICAgICAgbGV0IGN1ckNvbW1lbnRzOmFueTtcbiAgICAgICAgaWYoaXRlbSkge1xuICAgICAgICAgICAgaWYoaXRlbS5maWVsZHMuY29tbWVudHMuYXJyYXlWYWx1ZS52YWx1ZXMgPT09IHVuZGVmaW5lZCkgY3VyQ29tbWVudHMgPSBbXTtcbiAgICAgICAgICAgIGVsc2UgY3VyQ29tbWVudHMgPSBpdGVtLmZpZWxkcy5jb21tZW50cy5hcnJheVZhbHVlLnZhbHVlcztcbiAgICAgICAgICAgIGl0ZW0gIT09IHVuZGVmaW5lZCAmJiBleHRyYWN0LnB1c2goe1xuICAgICAgICAgICAgICAgIGNyZWF0ZVRpbWU6IGl0ZW0uY3JlYXRlVGltZSxcbiAgICAgICAgICAgICAgICB0aXRsZTogaXRlbS5maWVsZHMudGl0bGUuc3RyaW5nVmFsdWUsXG4gICAgICAgICAgICAgICAgY29udGVudDogaXRlbS5maWVsZHMuY29udGVudC5zdHJpbmdWYWx1ZSxcbiAgICAgICAgICAgICAgICBwb2ludDogaXRlbS5maWVsZHMucG9pbnQuc3RyaW5nVmFsdWUsXG4gICAgICAgICAgICAgICAgcGhvdG86IGl0ZW0uZmllbGRzLnBob3RvLmFycmF5VmFsdWUudmFsdWVzLFxuICAgICAgICAgICAgICAgIHVzZXI6IGl0ZW0uZmllbGRzLnVzZXIuc3RyaW5nVmFsdWUsXG4gICAgICAgICAgICAgICAgY29tbWVudHM6IGN1ckNvbW1lbnRzLFxuICAgICAgICAgICAgICAgIG5hbWU6IGl0ZW0ubmFtZSxcbiAgICAgICAgICAgICAgICBsaWtlczogaXRlbS5maWVsZHMubGlrZXMuYXJyYXlWYWx1ZS52YWx1ZXMsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGNvbnNvbGUubG9nKFwiXFxuXFxuXFxuXFxuXFxuXFxuc3RhcnRJbmRleCA6IFwiLCBzdGFydEluZGV4LCBcIlxcblxcblxcblxcblxcblxcblxcblwiKVxuICAgIC8vIGNvbnNvbGUubG9nKFwicm91Z2ggZGF0YSA6IFwiICwgZGF0YSk7XG4gICAgcmV0dXJuIGV4dHJhY3Q7XG59IFxuICAiXSwibmFtZXMiOlsiZmV0Y2hQb3N0Iiwic3RhcnRJbmRleCIsInZhbHVlIiwiZW5kSW5kZXgiLCJyZXNwb25zZSIsImZldGNoIiwibWV0aG9kIiwiY2FjaGUiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJqc29uIiwiZXh0cmFjdCIsIm1hcCIsImVsZW0iLCJpdGVtIiwiZG9jdW1lbnQiLCJjdXJDb21tZW50cyIsImZpZWxkcyIsImNvbW1lbnRzIiwiYXJyYXlWYWx1ZSIsInZhbHVlcyIsInVuZGVmaW5lZCIsInB1c2giLCJjcmVhdGVUaW1lIiwidGl0bGUiLCJzdHJpbmdWYWx1ZSIsImNvbnRlbnQiLCJwb2ludCIsInBob3RvIiwidXNlciIsIm5hbWUiLCJsaWtlcyIsImNvbnNvbGUiLCJsb2ciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/[location]/fetchPost.tsx\n"));

/***/ })

});