"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/[location]/page",{

/***/ "(app-pages-browser)/./app/[location]/updatePost.tsx":
/*!***************************************!*\
  !*** ./app/[location]/updatePost.tsx ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   updatePost: function() { return /* binding */ updatePost; }\n/* harmony export */ });\nconst updatePost = async (postId)=>{\n    const res = await fetch(\"https://firestore.googleapis.com/v1/projects/daedongyourmap-ad63d/databases/(default)/documents/posts/\".concat(postId), {\n        method: \"GET\"\n    });\n    const data = await res.json();\n    let extract = [];\n    let curComments;\n    if (data) {\n        if (data.fields.comments.arrayValue.values === undefined) curComments = [];\n        else curComments = data.fields.comments.arrayValue.values;\n        data !== undefined && extract.push({\n            createTime: data.fields.createTime.doubleValue,\n            title: data.fields.title.stringValue,\n            content: data.fields.content.stringValue,\n            point: data.fields.point.stringValue,\n            photo: data.fields.photo.arrayValue.values,\n            user: data.fields.user.stringValue,\n            comments: curComments,\n            name: data.name,\n            likes: data.fields.likes.arrayValue.values\n        });\n    }\n    console.log(\"updated post : \", postId);\n    return extract;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9bbG9jYXRpb25dL3VwZGF0ZVBvc3QudHN4IiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxNQUFNQSxhQUFhLE9BQU9DO0lBQzdCLE1BQU1DLE1BQU0sTUFBTUMsTUFBTSx5R0FBZ0gsT0FBUEYsU0FBVTtRQUN2SUcsUUFBUTtJQUNaO0lBQ0EsTUFBTUMsT0FBTyxNQUFNSCxJQUFJSSxJQUFJO0lBRTNCLElBQUlDLFVBQWlCLEVBQUU7SUFDdkIsSUFBSUM7SUFDQSxJQUFHSCxNQUFNO1FBQ0wsSUFBR0EsS0FBS0ksTUFBTSxDQUFDQyxRQUFRLENBQUNDLFVBQVUsQ0FBQ0MsTUFBTSxLQUFLQyxXQUFXTCxjQUFjLEVBQUU7YUFDcEVBLGNBQWNILEtBQUtJLE1BQU0sQ0FBQ0MsUUFBUSxDQUFDQyxVQUFVLENBQUNDLE1BQU07UUFDekRQLFNBQVNRLGFBQWFOLFFBQVFPLElBQUksQ0FBQztZQUMvQkMsWUFBWVYsS0FBS0ksTUFBTSxDQUFDTSxVQUFVLENBQUNDLFdBQVc7WUFDOUNDLE9BQU9aLEtBQUtJLE1BQU0sQ0FBQ1EsS0FBSyxDQUFDQyxXQUFXO1lBQ3BDQyxTQUFTZCxLQUFLSSxNQUFNLENBQUNVLE9BQU8sQ0FBQ0QsV0FBVztZQUN4Q0UsT0FBT2YsS0FBS0ksTUFBTSxDQUFDVyxLQUFLLENBQUNGLFdBQVc7WUFDcENHLE9BQU9oQixLQUFLSSxNQUFNLENBQUNZLEtBQUssQ0FBQ1YsVUFBVSxDQUFDQyxNQUFNO1lBQzFDVSxNQUFNakIsS0FBS0ksTUFBTSxDQUFDYSxJQUFJLENBQUNKLFdBQVc7WUFDbENSLFVBQVVGO1lBQ1ZlLE1BQU1sQixLQUFLa0IsSUFBSTtZQUNmQyxPQUFPbkIsS0FBS0ksTUFBTSxDQUFDZSxLQUFLLENBQUNiLFVBQVUsQ0FBQ0MsTUFBTTtRQUM5QztJQUNKO0lBQ0phLFFBQVFDLEdBQUcsQ0FBQyxtQkFBbUJ6QjtJQUMvQixPQUFPTTtBQUNYLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL1tsb2NhdGlvbl0vdXBkYXRlUG9zdC50c3g/MWRhNiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgdXBkYXRlUG9zdCA9IGFzeW5jIChwb3N0SWQ6c3RyaW5nKSA9PiB7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYGh0dHBzOi8vZmlyZXN0b3JlLmdvb2dsZWFwaXMuY29tL3YxL3Byb2plY3RzL2RhZWRvbmd5b3VybWFwLWFkNjNkL2RhdGFiYXNlcy8oZGVmYXVsdCkvZG9jdW1lbnRzL3Bvc3RzLyR7cG9zdElkfWAsIHtcbiAgICAgICAgbWV0aG9kOiAnR0VUJ1xuICAgIH0pXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XG5cbiAgICBsZXQgZXh0cmFjdDogYW55W10gPSBbXTtcbiAgICBsZXQgY3VyQ29tbWVudHM6YW55O1xuICAgICAgICBpZihkYXRhKSB7XG4gICAgICAgICAgICBpZihkYXRhLmZpZWxkcy5jb21tZW50cy5hcnJheVZhbHVlLnZhbHVlcyA9PT0gdW5kZWZpbmVkKSBjdXJDb21tZW50cyA9IFtdO1xuICAgICAgICAgICAgZWxzZSBjdXJDb21tZW50cyA9IGRhdGEuZmllbGRzLmNvbW1lbnRzLmFycmF5VmFsdWUudmFsdWVzO1xuICAgICAgICAgICAgZGF0YSAhPT0gdW5kZWZpbmVkICYmIGV4dHJhY3QucHVzaCh7XG4gICAgICAgICAgICAgICAgY3JlYXRlVGltZTogZGF0YS5maWVsZHMuY3JlYXRlVGltZS5kb3VibGVWYWx1ZSxcbiAgICAgICAgICAgICAgICB0aXRsZTogZGF0YS5maWVsZHMudGl0bGUuc3RyaW5nVmFsdWUsXG4gICAgICAgICAgICAgICAgY29udGVudDogZGF0YS5maWVsZHMuY29udGVudC5zdHJpbmdWYWx1ZSxcbiAgICAgICAgICAgICAgICBwb2ludDogZGF0YS5maWVsZHMucG9pbnQuc3RyaW5nVmFsdWUsXG4gICAgICAgICAgICAgICAgcGhvdG86IGRhdGEuZmllbGRzLnBob3RvLmFycmF5VmFsdWUudmFsdWVzLFxuICAgICAgICAgICAgICAgIHVzZXI6IGRhdGEuZmllbGRzLnVzZXIuc3RyaW5nVmFsdWUsXG4gICAgICAgICAgICAgICAgY29tbWVudHM6IGN1ckNvbW1lbnRzLFxuICAgICAgICAgICAgICAgIG5hbWU6IGRhdGEubmFtZSxcbiAgICAgICAgICAgICAgICBsaWtlczogZGF0YS5maWVsZHMubGlrZXMuYXJyYXlWYWx1ZS52YWx1ZXMsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIGNvbnNvbGUubG9nKFwidXBkYXRlZCBwb3N0IDogXCIsIHBvc3RJZCk7XG4gICAgcmV0dXJuIGV4dHJhY3Q7XG59Il0sIm5hbWVzIjpbInVwZGF0ZVBvc3QiLCJwb3N0SWQiLCJyZXMiLCJmZXRjaCIsIm1ldGhvZCIsImRhdGEiLCJqc29uIiwiZXh0cmFjdCIsImN1ckNvbW1lbnRzIiwiZmllbGRzIiwiY29tbWVudHMiLCJhcnJheVZhbHVlIiwidmFsdWVzIiwidW5kZWZpbmVkIiwicHVzaCIsImNyZWF0ZVRpbWUiLCJkb3VibGVWYWx1ZSIsInRpdGxlIiwic3RyaW5nVmFsdWUiLCJjb250ZW50IiwicG9pbnQiLCJwaG90byIsInVzZXIiLCJuYW1lIiwibGlrZXMiLCJjb25zb2xlIiwibG9nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/[location]/updatePost.tsx\n"));

/***/ })

});